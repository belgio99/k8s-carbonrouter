apiVersion: v1
kind: ServiceAccount
metadata:
  name: trafficschedule-viewer-sa
  namespace: carbonstat
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: trafficschedule-viewer-binding
subjects:
- kind: ServiceAccount
  name: trafficschedule-viewer-sa
  namespace: carbonstat
roleRef:
  kind: ClusterRole
  name: trafficschedule-viewer-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: buffer-service-router-carbonstat #buffer-service-router- carbonstat 
  namespace: carbonstat
  labels:
    # Recommended labels
    app.kubernetes.io/name:        buffer-service-router
    app.kubernetes.io/instance:    carbonshift
    app.kubernetes.io/component:   router
    app.kubernetes.io/part-of:     carbonshift
    carbonshift/parent-service:    carbonstat
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name:        buffer-service-router
      app.kubernetes.io/instance:    carbonshift
  template:
    metadata:
      labels:
        app.kubernetes.io/name:        buffer-service-router
        app.kubernetes.io/instance:    carbonshift
        app.kubernetes.io/component:   router
        app.kubernetes.io/part-of:     carbonshift
        app.kubernetes.io/managed-by:  carbonshift-operator
        carbonshift/parent-service:    carbonstat
    spec:
      serviceAccountName: trafficschedule-viewer-sa
      containers:
      - name: buffer-service-router
        image: ghcr.io/belgio99/k8s-carbonshift/buffer-service-router:latest
        imagePullPolicy: Always
        env:
        - name: RABBITMQ_URL
          value: "amqp://carbonuser:supersecret@carbonshift-rabbitmq.carbonshift-system.svc.cluster.local:5672"
        - name: TRAFFIC_SCHEDULE_NAME
          value: "TrafficSchedule"
        - name: METRICS_PORT
          value: "8001"
        - name: TARGET_SVC_NAME
          value: carbonstat
        - name: TARGET_SVC_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: TS_NAME
          value: "traffic-schedule"
        - name: DEBUG
          value: "false"
        - name: PYTHONUNBUFFERED
          value: "1"
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "1"
            memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: buffer-service-router-carbonstat #buffer-service-router- carbonstat 
  namespace: carbonstat
  labels:
    app.kubernetes.io/name:        buffer-service-router
    app.kubernetes.io/instance:    carbonshift
    app.kubernetes.io/component:   router
    app.kubernetes.io/part-of:     carbonshift
    carbonshift/parent-service:    carbonstat
spec:
  selector:
    app.kubernetes.io/name:        buffer-service-router
    app.kubernetes.io/instance:    carbonshift
  ports:
  - name: http
    port: 8000
    targetPort: 8000
  - name: metrics
    port: 8001
    targetPort: 8001
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: buffer-service-consumer-carbonstat #buffer-service-router- carbonstat 
  namespace: carbonstat
  labels:
    # Recommended labels
    app.kubernetes.io/name:        buffer-service-consumer
    app.kubernetes.io/instance:    carbonshift
    app.kubernetes.io/component:   consumer
    app.kubernetes.io/part-of:     carbonshift
    carbonshift/parent-service:    carbonstat
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name:        buffer-service-consumer
      app.kubernetes.io/instance:    carbonshift
  template:
    metadata:
      labels:
        app.kubernetes.io/name:        buffer-service-consumer
        app.kubernetes.io/instance:    carbonshift
        app.kubernetes.io/component:   consumer
        app.kubernetes.io/part-of:     carbonshift
        app.kubernetes.io/managed-by:  carbonshift-operator
        carbonshift/parent-service:    carbonstat
        istio.io/rev: default
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: trafficschedule-viewer-sa
      containers:
      - name: buffer-service-consumer
        image: ghcr.io/belgio99/k8s-carbonshift/buffer-service-consumer:latest
        imagePullPolicy: Always
        env:
        - name: RABBITMQ_URL
          value: "amqp://carbonuser:supersecret@carbonshift-rabbitmq.carbonshift-system.svc.cluster.local:5672"
        - name: TRAFFIC_SCHEDULE_NAME
          value: "TrafficSchedule"
        - name: METRICS_PORT
          value: "8001"
        - name: TARGET_SVC_NAME
          value: carbonstat
        - name: TARGET_SVC_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: TARGET_SVC_SCHEME
          value: http
        - name: TARGET_SVC_PORT
          value: "80"
        - name: TS_NAME
          value: "traffic-schedule"
        - name: DEBUG
          value: "false"
        - name: PYTHONUNBUFFERED
          value: "1"
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "1"
            memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: buffer-service-consumer-carbonstat #buffer-service-router- carbonstat 
  namespace: carbonstat
  labels:
    app.kubernetes.io/name:        buffer-service-consumer
    app.kubernetes.io/instance:    carbonshift
    app.kubernetes.io/component:   consumer
    app.kubernetes.io/part-of:     carbonshift
    carbonshift/parent-service:    carbonstat
spec:
  selector:
    app.kubernetes.io/name:        buffer-service-consumer
    app.kubernetes.io/instance:    carbonshift
  ports:
  - name: metrics
    port: 8001
    targetPort: 8001
  type: ClusterIP
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: buffer-service-consumer
  namespace: carbonstat
spec:
  scaleTargetRef:
    name: buffer-service-consumer-carbonstat
  pollingInterval: 5
  cooldownPeriod: 60
  minReplicaCount: 0
  maxReplicaCount: 15
  triggers:
  # --- direct.low-power ---
  # Wake up the consumer when the queue length is above 1
  - type: rabbitmq
    authenticationRef:
      name: carbonshift-rabbitmq-auth
      kind: ClusterTriggerAuthentication
    metadata:
      queueName: carbonstat.carbonstat.direct.low-power
      mode: QueueLength
      value: "1000000" # High value to prevent creating 1 pod per message

  # --- direct.mid-power ---
  - type: rabbitmq
    authenticationRef:
      name: carbonshift-rabbitmq-auth
      kind: ClusterTriggerAuthentication
    metadata:
      queueName: carbonstat.carbonstat.direct.mid-power
      mode: QueueLength
      value: "1000000"

  # --- direct.high-power ---
  - type: rabbitmq
    authenticationRef:
      name: carbonshift-rabbitmq-auth
      kind: ClusterTriggerAuthentication
    metadata:
      queueName: carbonstat.carbonstat.direct.high-power
      mode: QueueLength
      value: "1000000"

  - type: cpu
    metricType: Utilization
    metadata:
      value: "80"
  # Cooldown
  - type: prometheus
    metadata:
      serverAddress: http://carbonshift-kube-prometheu-prometheus.carbonshift-system.svc:9090
      query: |
        sum(increase(consumer_http_requests_created[60s]))
      threshold: "1000000"
      activationThreshold: "1"

  - type: prometheus
    metadata:
      serverAddress: http://carbonshift-kube-prometheu-prometheus.carbonshift-system.svc:9090
      query: |
        sum(rabbitmq_queue_messages_ready{queue=~"^carbonstat\\.carbonstat\\.queue\\..+"})
        *
        max(schedule_consumption_enabled)
      threshold: "1"
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: carbonstat-low-power
  namespace: carbonstat
spec:
  scaleTargetRef:
    name: carbonstat-low-power
  pollingInterval: 5
  cooldownPeriod: 60
  minReplicaCount: 0
  maxReplicaCount: 15
  triggers:
    - type: prometheus
      metadata:
        serverAddress: http://carbonshift-kube-prometheu-prometheus.carbonshift-system.svc:9090
        query: |
          sum(
            max_over_time(
            rabbitmq_queue_messages_ready{
              queue="carbonstat.carbonstat.queue.low-power"
            }
          [30s])
          ) * max(schedule_consumption_enabled)
        threshold: "1000000"
        activationThreshold: "1"

    - type: rabbitmq
      authenticationRef:
        name: carbonshift-rabbitmq-auth
        kind: ClusterTriggerAuthentication
      metadata:
        queueName: carbonstat.carbonstat.direct.low-power
        mode: QueueLength
        value: "1000000"

    - type: cpu
      metricType: Utilization
      metadata:
        value: "80"
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: carbonstat-mid-power
  namespace: carbonstat
spec:
  scaleTargetRef:
    name: carbonstat-mid-power
  pollingInterval: 5
  cooldownPeriod: 60
  minReplicaCount: 0
  maxReplicaCount: 15
  triggers:
    - type: prometheus
      metadata:
        serverAddress: http://carbonshift-kube-prometheu-prometheus.carbonshift-system.svc:9090
        query: |
          sum(
            max_over_time(
            rabbitmq_queue_messages_ready{
              queue="carbonstat.carbonstat.queue.mid-power"
            }
          [30s])
          ) * max(schedule_consumption_enabled)
        threshold: "1000000"
        activationThreshold: "1"

    - type: rabbitmq
      authenticationRef:
        name: carbonshift-rabbitmq-auth
        kind: ClusterTriggerAuthentication
      metadata:
        queueName: carbonstat.carbonstat.direct.mid-power
        mode: QueueLength
        value: "1000000"

    - type: cpu
      metricType: Utilization
      metadata:
        value: "80"
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: carbonstat-high-power
  namespace: carbonstat
spec:
  scaleTargetRef:
    name: carbonstat-high-power
  pollingInterval: 5
  cooldownPeriod: 60
  minReplicaCount: 0
  maxReplicaCount: 15
  triggers:
    - type: prometheus
      metadata:
        serverAddress: http://carbonshift-kube-prometheu-prometheus.carbonshift-system.svc:9090
        query: |
          sum(
            max_over_time(
            rabbitmq_queue_messages_ready{
              queue="carbonstat.carbonstat.queue.high-power"
            }
          [30s])
          ) * max(schedule_consumption_enabled)
        threshold: "1000000"
        activationThreshold: "1"

    - type: rabbitmq
      authenticationRef:
        name: carbonshift-rabbitmq-auth
        kind: ClusterTriggerAuthentication
      metadata:
        queueName: carbonstat.carbonstat.direct.high-power
        mode: QueueLength
        value: "1000000"

    - type: cpu
      metricType: Utilization
      metadata:
        value: "80"